{"version":3,"sources":["api.js","components/Game.js","actions/detailActions.js","img/playstation.svg","img/steam.svg","img/xbox.svg","img/nintendo.svg","img/apple.svg","img/gamepad.svg","components/GamesDetail.js","pages/Home.js","actions/gamesAction.js","components/GlobalStyles.js","App.js","reportWebVitals.js","reducers/gamesReducer.js","reducers/detailReducer.js","reducers/index.js","index.js"],"names":["base_url","getCurrentMonth","month","Date","getMonth","currentYear","getFullYear","currentMonth","currentDay","currentDate","lastYear","nextYear","key","popular_games","upcoming_games","new_games","gameScreenshotURL","game_id","StyledGame","styled","motion","div","Game","name","released","image","id","stringPathId","toString","dispatch","useDispatch","layoutId","onClick","document","body","style","overflow","a","type","proxyurl","axios","get","detailData","screenshotData","payload","game","data","screen","loadDetail","to","h3","img","src","alt","Description","Platforms","Info","Stats","Media","Detail","CardShadow","GamesDetail","pathId","history","useHistory","getPlatform","platform","playstation","xbox","steam","apple","nintendo","gamepad","useSelector","state","detail","isLoading","className","e","target","classList","contains","push","rating","platforms","map","background_image","description_raw","results","GameList","Games","Home","useLocation","pathname","split","useEffect","popularData","upcomingData","newData","popular","upcoming","newGames","games","upComing","AnimateSharedLayout","AnimatePresence","GlobalStyles","createGlobalStyle","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","gamesReducer","action","detailReducer","rootReducer","combineReducers","composeEnchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f5d86a2.chunk.js","sourcesContent":["//Base URL\r\n\r\nconst base_url = \"https://api.rawg.io/api/\"\r\n\r\n//Getting the date\r\n\r\nconst getCurrentMonth = () => {\r\n    const month = new Date().getMonth() + 1;\r\n    if (month < 10) {\r\n        return `0${month}`\r\n    } else {\r\n        return month;\r\n    }\r\n}\r\n\r\nconst getCurrentDay = () => {\r\n    const day = new Date().getDate();\r\n    if (day < 10) {\r\n        return `0${day}`\r\n    } else {\r\n        return day;\r\n    }\r\n}\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst currentMonth = getCurrentMonth();\r\nconst currentDay = getCurrentMonth();\r\n\r\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\r\n\r\nconst lastYear = `${currentYear - 1}-${currentMonth}-${currentDay}`;\r\nconst nextYear = `${currentYear + 1}-${currentMonth}-${currentDay}`;\r\n\r\n//Popular Games\r\n\r\nconst key = 'e1347f35d01f4979b52bdf64192766f7';\r\n\r\nconst popular_games = `games?key=${key}&dates${lastYear},${currentDate}&ordering=-rating&page_size=10`;\r\nconst upcoming_games = `games?key=${key}&dates=${currentDate},${nextYear}&ordering=-added&page_size=10`;\r\nconst new_games = `games?key=${key}&dates=${lastYear},${currentYear}&ordering=-released&page_size=10`;\r\n\r\nexport const newGamesURL =() => `${base_url}${new_games}`;\r\nexport const upcomingGamesURL = () => `${base_url}${upcoming_games}`;\r\nexport const popularGamesURL = () => `${base_url}${popular_games}`;\r\n\r\n//game details\r\nexport const gameDetailsURL = (game_id) => `${base_url}games/${game_id}?key=${key}`\r\n//screenshots\r\nexport const gameScreenshotURL = (game_id) => `${base_url}games/${game_id}/screenshots?key=${key}`\r\n","import React from 'react'\r\n//styling and animation\r\nimport styled from 'styled-components'\r\nimport { motion } from 'framer-motion'\r\n//redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadDetail } from '../actions/detailActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Game = ({ name, released, image,id }) => {\r\n    const stringPathId = id.toString();\r\n    const dispatch = useDispatch();\r\n    const loadDetailHandler = () => {\r\n        document.body.style.overflow = \"hidden\";\r\n        dispatch(loadDetail(id));\r\n    }\r\n\r\n    return (\r\n        <StyledGame layoutId={stringPathId} onClick={loadDetailHandler}>\r\n            <Link to={`/game/${id}`}>\r\n                <motion.h3 >{name}</motion.h3>\r\n                <p>{released}</p>\r\n                <motion.img layoutId={`image ${stringPathId}`} src={image} alt={name}/>\r\n            </Link>\r\n        </StyledGame>\r\n    )\r\n}\r\n\r\nconst StyledGame = styled(motion.div)`\r\nmin-height: 30vh;\r\nbox-shadow: 0px 5px 30px rgba(0,0,0,.2);\r\ntext-align: center;\r\nborder-radius: 1rem;\r\ncursor: pointer;\r\noverflow: hidden;\r\n    img{\r\n        width:100%;\r\n        height: 40vh;\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nexport default Game\r\n","import axios from 'axios';\r\nimport {gameDetailsURL, gameScreenshotURL} from '../api'\r\n\r\nexport const loadDetail = (id) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: \"LOADING_DETAIL\",\r\n    })\r\n\r\n    const proxyurl = \"https://thingproxy.freeboard.io/fetch/\";\r\n    const detailData = await axios.get(proxyurl + gameDetailsURL(id));\r\n    const screenshotData = await axios.get(proxyurl + gameScreenshotURL(id));\r\n\r\n    dispatch({\r\n        type: \"GET_DETAIL\",\r\n        payload: {\r\n            game: detailData.data,\r\n            screen: screenshotData.data,\r\n        }\r\n    })\r\n}","export default __webpack_public_path__ + \"static/media/playstation.18cc4b9c.svg\";","export default __webpack_public_path__ + \"static/media/steam.d7b8819f.svg\";","export default __webpack_public_path__ + \"static/media/xbox.3e7db735.svg\";","export default __webpack_public_path__ + \"static/media/nintendo.f579be04.svg\";","export default __webpack_public_path__ + \"static/media/apple.5757c37e.svg\";","export default __webpack_public_path__ + \"static/media/gamepad.c9269ef5.svg\";","import React from 'react'\r\n//styling and animation\r\nimport styled from 'styled-components'\r\nimport { motion } from 'framer-motion'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\n//images\r\nimport playstation from '../img/playstation.svg'\r\nimport steam from '../img/steam.svg'\r\nimport xbox from '../img/xbox.svg'\r\nimport nintendo from '../img/nintendo.svg'\r\nimport apple from '../img/apple.svg'\r\nimport gamepad from '../img/gamepad.svg'\r\n\r\nconst GamesDetail = ({pathId}) => {\r\n    const history = useHistory();\r\n    //exit detail\r\n    const exitDetailHandler = (e) => {\r\n        const element = e.target;\r\n        if (element.classList.contains('shadow')) {\r\n            document.body.style.overflow = 'auto';\r\n            history.push('/ignite/');\r\n        }\r\n    }\r\n\r\n    //get platform images\r\n    const getPlatform = (platform) => {\r\n        switch (platform) {\r\n            case \"Playstation 4\":\r\n                return playstation;\r\n            case \"Xbox One\":\r\n                return xbox;\r\n            case \"PC\":\r\n                return steam;\r\n            case \"iOS\":\r\n                return apple;\r\n            case \"Nintendo Switch\":\r\n                return nintendo;\r\n            default:\r\n                return gamepad;\r\n        }\r\n    }\r\n\r\n    //data\r\n    const { screen, game, isLoading } = useSelector((state) => state.detail)\r\n    \r\n\r\n    return (\r\n        <>\r\n            {!isLoading && (\r\n                <CardShadow className=\"shadow\" onClick={exitDetailHandler}>\r\n                <Detail layoutId={pathId}>\r\n                    <Stats>\r\n                        <div className=\"rating\">\r\n                                <motion.h3  >{game.name}</motion.h3>\r\n                            <p>Rating: {game.rating}</p>\r\n                        </div>\r\n                        <Info>\r\n                            <h3>Plataforms</h3>\r\n                            <Platforms>\r\n                            {game.platforms.map((data) => (\r\n                                <img key={data.platform.id}\r\n                                    alt={data.platform.name}\r\n                                src={getPlatform(data.platform.name)}\r\n                                ></img>\r\n                                ))}\r\n                            </Platforms>\r\n                        </Info>\r\n                    </Stats>\r\n                    <Media>\r\n                        <motion.img  layoutId={`image ${pathId}`}  src={game.background_image} alt=\"image\"/>\r\n                    </Media>\r\n                    <Description>\r\n                        <p> {game.description_raw} </p>\r\n                    </Description>\r\n                    <div className=\"gallery\">\r\n                        {screen.results.map((screen) => (\r\n                            <motion.img src={screen.image} key ={screen.id} alt=\"game\"/>\r\n                        ))}\r\n                    </div>\r\n                </Detail>\r\n            </CardShadow>\r\n            )}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst Description = styled(motion.div)`\r\n    margin: 3rem 0rem;\r\n`;\r\n\r\nconst Platforms = styled(motion.div)`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    img{\r\n        margin-left: 3rem;\r\n    }\r\n`;\r\n\r\nconst Info = styled(motion.div)`\r\n    text-align: center;\r\n`;\r\n\r\nconst Stats = styled(motion.div)`\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Media = styled(motion.div)`\r\n    margin-top: 3rem;\r\n    img{\r\n        width: 100%;\r\n        height: 60%;\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nconst Detail = styled(motion.div)`\r\n    width: 80%;\r\n    border-radius: 1rem;\r\n    padding: 2rem 5rem;\r\n    background: white;\r\n    left: 10%;\r\n    color: black;\r\n    position: absolute;\r\n    img{\r\n        width:100%;\r\n    }\r\n`;\r\n\r\nconst CardShadow = styled(motion.div)`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    overflow-y: scroll;\r\n    background: rgba(0,0,0,.5);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    &::-webkit-scrollbar{\r\n        width: 0.5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n        background-color: #ff7676;\r\n    }\r\n    &::-webkit-scrollbar-track{\r\n        background: white;\r\n    }\r\n`;\r\n\r\nexport default GamesDetail\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadGames } from '../actions/gamesAction';\r\n\r\n//Components\r\nimport Game from '../components/Game'\r\nimport GamesDetail from '../components/GamesDetail'\r\n\r\n//styling and animation\r\nimport styled from 'styled-components'\r\nimport { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    //get current location\r\n    const location = useLocation();\r\n    const pathId = location.pathname.split(\"/\")[2];\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      dispatch(loadGames());\r\n    },[]);\r\n\r\n    //get the data back\r\n    const {popular, newGames, upComing} = useSelector((state) => state.games);\r\n\r\n    return (\r\n        <GameList>\r\n            <AnimateSharedLayout type ='corssfade'>\r\n                <AnimatePresence>{pathId && <GamesDetail pathId={pathId }/>}</AnimatePresence>\r\n            \r\n            <h2>Upcoming Games</h2>\r\n            <Games>\r\n                {upComing.map((game) => (\r\n                    <Game\r\n                        name={game.name}\r\n                        released={game.released}\r\n                        id={game.id}\r\n                        image={game.background_image}\r\n                        key={game.id}\r\n                    />\r\n                ))}\r\n            </Games>\r\n            <h2>Popular Games</h2>\r\n            <Games>\r\n                {popular.map((game) => (\r\n                    <Game\r\n                        name={game.name}\r\n                        released={game.released}\r\n                        id={game.id}\r\n                        image={game.background_image}\r\n                        key={game.id}\r\n                    />\r\n                ))}\r\n            </Games>\r\n            <h2>New Games</h2>\r\n            <Games>\r\n                {newGames.map((game) => (\r\n                    <Game\r\n                        name={game.name}\r\n                        released={game.released}\r\n                        id={game.id}\r\n                        image={game.background_image}\r\n                        key={game.id}\r\n                    />\r\n                ))}\r\n                </Games>\r\n                </AnimateSharedLayout>\r\n        </GameList>\r\n    )\r\n}\r\n\r\nconst GameList = styled(motion.div)`\r\n padding: 0rem 5rem;\r\n h2{\r\n     padding: 3rem 0rem;\r\n }\r\n`;\r\n\r\nconst Games = styled(motion.div)`\r\n    min-height: 80vh;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n    grid-column-gap: 3rem;\r\n    grid-row-gap: 5rem;\r\n`;\r\n\r\nexport default Home\r\n","import axios from 'axios';\r\nimport { popularGamesURL, upcomingGamesURL, newGamesURL } from '../api'\r\n\r\n//Action Creator\r\n\r\nexport const loadGames = () => async (dispatch) => {\r\n    //FETCH AXIOS\r\n    const proxyurl = \"https://thingproxy.freeboard.io/fetch/\";\r\n    const popularData = await axios.get(proxyurl + popularGamesURL());\r\n    const upcomingData = await axios.get(proxyurl + upcomingGamesURL());\r\n    const newData = await axios.get(proxyurl + newGamesURL());\r\n    dispatch({\r\n        type: \"FETCH_GAMES\",\r\n        payload: {\r\n            popular: popularData.data.results,\r\n            upcoming: upcomingData.data.results,\r\n            newGames: newData.data.results,\r\n        }\r\n    })\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    html{\r\n        &::-webkit-scrollbar{\r\n            width: 0.5rem;\r\n        }\r\n        &::-webkit-scrollbar-thumb{\r\n            background-color: darkgray;\r\n        }\r\n    }\r\n    body{\r\n        font-family: 'Montserrat', sand-serif;\r\n        width: 100%;\r\n    }\r\n    h2{\r\n        font-size: 2.5rem;\r\n        font-family: 'Abril Fatface', cursive;\r\n        font-weight: lighter;\r\n    }\r\n    h3{\r\n        font-size: 1.3rem;\r\n        color: #333;\r\n        padding: 1.5rem 0rem;\r\n    }\r\n    p{\r\n        font-size: 1.2rem;\r\n        line-height: 200%;\r\n        color: #696969;\r\n    }\r\n    a{\r\n        text-decoration: none;\r\n        color: #333;\r\n    }\r\n    img{\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import React from 'react';\r\n//Pages\r\nimport Home from './pages/Home'\r\nimport GlobalStyles from './components/GlobalStyles'\r\n\r\nimport {Route} from 'react-router-dom'\r\n\r\nconst App = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <GlobalStyles />\r\n      <Route path={['/ignite/game/:id', '/ignite/']}>\r\n        <Home/>\r\n      </Route>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    popular :[],\r\n    newGames :[],\r\n    upComing :[]\r\n}\r\n\r\nconst gamesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_GAMES\":\r\n            return {\r\n                ...state,\r\n                popular: action.payload.popular,\r\n                upComing: action.payload.upcoming,\r\n                newGames: action.payload.newGames,\r\n            };\r\n    \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default gamesReducer;","const initialState = { game: {platforms: []}, screen: {results: []}, isLoading: true };\r\n\r\nconst detailReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_DETAIL\":\r\n            return {\r\n                ...state,\r\n                game: action.payload.game,\r\n                screen: action.payload.screen,\r\n                isLoading: false,\r\n            };\r\n        case \"LOADING_DETAIL\":\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\n\r\nexport default detailReducer;","import { combineReducers } from \"redux\";\r\nimport gamesReducer from \"./gamesReducer\";\r\nimport detailReducer from './detailReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    games: gamesReducer,\r\n    detail: detailReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//redux setup\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducers from './reducers';\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nconst composeEnchancer =  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducers, composeEnchancer(applyMiddleware(thunk))\r\n  );\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}